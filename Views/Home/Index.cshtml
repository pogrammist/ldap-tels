@model IEnumerable<ldap_tels.Models.Contact>

@{
    ViewData["Title"] = "Телефонный справочник";
    Layout = "_Layout";
}

<div class="container">
    <h1 class="mb-4">Телефонный справочник</h1>

    <div class="row mb-4">
        <div class="col-md-6">
            <form asp-action="Search" method="get" class="d-flex">
                <input type="text" name="query" class="form-control me-2" placeholder="Поиск по имени, отделу, телефону..." value="@ViewBag.SearchQuery" id="liveSearchInput">
                <button type="button" id="clearSearchBtn" class="btn btn-primary">Очистить</button>
            </form>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="Departments" class="btn btn-outline-secondary">Отделы</a>
        </div>
    </div>

    @if (ViewBag.Department != null)
    {
        <div class="alert alert-info">
            Отдел: @ViewBag.Department
            <a asp-action="Index" class="float-end">Сбросить фильтр</a>
        </div>
    }

    @if (ViewBag.SearchQuery != null)
    {
        <div class="alert alert-info">
            Результаты поиска для: "@ViewBag.SearchQuery"
            <a asp-action="Index" class="float-end">Сбросить поиск</a>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-warning">
            Контакты не найдены.
        </div>
    }
    else
    {
        @await Html.PartialAsync("_ContactsTablePartial", Model)

        @if (ViewBag.TotalPages > 1)
        {
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" 
                               asp-action="@(ViewBag.SearchQuery != null ? "Search" : (ViewBag.Department != null ? "Department" : "Index"))" 
                               asp-route-page="1" 
                               asp-route-query="@ViewBag.SearchQuery"
                               asp-route-department="@ViewBag.Department">
                                &laquo;
                            </a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" 
                               asp-action="@(ViewBag.SearchQuery != null ? "Search" : (ViewBag.Department != null ? "Department" : "Index"))" 
                               asp-route-page="@(ViewBag.CurrentPage - 1)" 
                               asp-route-query="@ViewBag.SearchQuery"
                               asp-route-department="@ViewBag.Department">
                                &lt;
                            </a>
                        </li>
                    }

                    @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <a class="page-link" 
                               asp-action="@(ViewBag.SearchQuery != null ? "Search" : (ViewBag.Department != null ? "Department" : "Index"))" 
                               asp-route-page="@i" 
                               asp-route-query="@ViewBag.SearchQuery"
                               asp-route-department="@ViewBag.Department">
                                @i
                            </a>
                        </li>
                    }

                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" 
                               asp-action="@(ViewBag.SearchQuery != null ? "Search" : (ViewBag.Department != null ? "Department" : "Index"))" 
                               asp-route-page="@(ViewBag.CurrentPage + 1)" 
                               asp-route-query="@ViewBag.SearchQuery"
                               asp-route-department="@ViewBag.Department">
                                &gt;
                            </a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" 
                               asp-action="@(ViewBag.SearchQuery != null ? "Search" : (ViewBag.Department != null ? "Department" : "Index"))" 
                               asp-route-page="@ViewBag.TotalPages" 
                               asp-route-query="@ViewBag.SearchQuery"
                               asp-route-department="@ViewBag.Department">
                                &raquo;
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
</div>

@section Scripts {
    <script>
        // Debounce функция
        function debounce(func, wait) {
            let timeout;
            return function(...args) {
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(this, args), wait);
            };
        }

        const searchInput = document.getElementById('liveSearchInput');
        const tableContainer = document.querySelector('.table-responsive');
        const clearBtn = document.getElementById('clearSearchBtn');

        function toggleClearBtn() {
            if (searchInput && clearBtn) {
                clearBtn.style.display = searchInput.value.length > 0 ? '' : 'none';
            }
        }

        async function fetchContacts(query) {
            const url = `/Home/Search?query=${encodeURIComponent(query)}`;
            const response = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
            if (response.ok) {
                const html = await response.text();
                // Парсим только таблицу из ответа
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = html;
                const newTable = tempDiv.querySelector('.table-responsive');
                if (newTable && tableContainer) {
                    tableContainer.innerHTML = newTable.innerHTML;
                }
            }
        }

        if (searchInput) {
            searchInput.addEventListener('input', debounce(function(e) {
                fetchContacts(e.target.value);
                toggleClearBtn();
            }, 350));
            searchInput.addEventListener('input', toggleClearBtn);
            window.addEventListener('DOMContentLoaded', toggleClearBtn);
        }
        if (clearBtn && searchInput) {
            clearBtn.addEventListener('click', function(e) {
                e.preventDefault();
                searchInput.value = '';
                fetchContacts('');
                toggleClearBtn();
                searchInput.focus();
            });
        }
    </script>
}
