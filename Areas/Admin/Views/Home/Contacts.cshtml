@model IEnumerable<ContactViewModel>
@{
    ViewData["Title"] = "Контакты";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var pageSize = ViewBag.PageSize ?? 20;
    var totalCount = ViewBag.TotalCount ?? 0;
    var totalPages = ViewBag.TotalPages ?? 1;
    var searchQuery = ViewBag.SearchQuery ?? string.Empty;
    var department = ViewBag.Department ?? string.Empty;
}

<div class="mb-4">
    <h1 class="mb-3">Контакты</h1>
    <div class="d-flex align-items-stretch flex-wrap">
        <form asp-action="SearchContacts" method="get" class="d-flex flex-grow-1 me-2 mb-2 mb-md-0">
            <input type="text" name="query" class="form-control flex-grow-1 me-2" placeholder="Поиск по имени, отделу, телефону..." value="@ViewBag.SearchQuery" id="liveSearchInput">
            <button type="button" id="clearSearchBtn" class="btn btn-primary flex-shrink-0">Очистить</button>
        </form>
        <a href="/Admin/Home/CreateContact" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Добавить контакт
        </a>
    </div>
</div>

@if (!string.IsNullOrEmpty(searchQuery))
{
    <div class="alert alert-info mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <strong>Результаты поиска для:</strong> @searchQuery
                <span class="badge bg-primary ms-2">@totalCount результатов</span>
            </div>
            <a asp-action="Contacts" class="btn btn-sm btn-outline-primary">Сбросить поиск</a>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(department))
{
    <div class="alert alert-info mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <strong>Отдел:</strong> @department
            </div>
            <a asp-action="Contacts" class="btn btn-sm btn-outline-primary">Показать все контакты</a>
        </div>
    </div>
}

@if (!Model.Any())
{
    <div class="alert alert-info">
        Контакты не найдены.
    </div>
}
else
{
    <div class="card mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>ФИО</th>
                            <th>Подразделение</th>
                            <th>Отдел</th>
                            <th>Должность</th>
                            <th>Телефон</th>
                            <th>Email</th>
                            <th>Источник</th>
                            <th>Действия</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var contact in Model)
                        {
                            <tr>
                                <td>@contact.Id</td>
                                <td>@contact.DisplayName</td>
                                <td>@contact.Division</td>
                                <td>@contact.Department</td>
                                <td>@contact.Title</td>
                                <td>@contact.PhoneNumber</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(contact.Email))
                                    {
                                        <a href="mailto:@contact.Email">@contact.Email</a>
                                    }
                                </td>
                                <td>
                                    @if (contact.ContactType == ContactType.Ldap && contact.LdapSourceId != null && contact.LdapSource != null)
                                    {
                                        <a asp-action="LdapSourceDetails" asp-route-id="@contact.LdapSourceId">
                                            @contact.LdapSource.Name
                                        </a>
                                    }
                                </td>
                                <td>
                                    <a asp-action="ContactDetails" asp-route-id="@contact.Id" class="btn btn-sm btn-info">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    @if (contact.LdapSourceId == null)
                                    {
                                        <a asp-action="EditContact" asp-route-id="@contact.Id" class="btn btn-sm btn-warning">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="DeleteContact" asp-route-id="@contact.Id" class="btn btn-sm btn-danger">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (totalPages > 1)
    {
        <nav aria-label="Навигация по страницам">
            <ul class="pagination justify-content-center">
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="@(string.IsNullOrEmpty(searchQuery) ? "Contacts" : "SearchContacts")" 
                           asp-route-page="1" 
                           asp-route-pageSize="@pageSize" 
                           asp-route-query="@searchQuery"
                           asp-route-department="@department">
                            &laquo;
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-action="@(string.IsNullOrEmpty(searchQuery) ? "Contacts" : "SearchContacts")" 
                           asp-route-page="@(currentPage - 1)" 
                           asp-route-pageSize="@pageSize" 
                           asp-route-query="@searchQuery"
                           asp-route-department="@department">
                            &lt;
                        </a>
                    </li>
                }

                @{
                    var startPage = Math.Max(1, currentPage - 2);
                    var endPage = Math.Min(totalPages, startPage + 4);
                    startPage = Math.Max(1, endPage - 4);
                }

                @for (var i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" asp-action="@(string.IsNullOrEmpty(searchQuery) ? "Contacts" : "SearchContacts")" 
                           asp-route-page="@i" 
                           asp-route-pageSize="@pageSize" 
                           asp-route-query="@searchQuery"
                           asp-route-department="@department">
                            @i
                        </a>
                    </li>
                }

                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="@(string.IsNullOrEmpty(searchQuery) ? "Contacts" : "SearchContacts")" 
                           asp-route-page="@(currentPage + 1)" 
                           asp-route-pageSize="@pageSize" 
                           asp-route-query="@searchQuery"
                           asp-route-department="@department">
                            &gt;
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-action="@(string.IsNullOrEmpty(searchQuery) ? "Contacts" : "SearchContacts")" 
                           asp-route-page="@totalPages" 
                           asp-route-pageSize="@pageSize" 
                           asp-route-query="@searchQuery"
                           asp-route-department="@department">
                            &raquo;
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
}

<div class="mt-4">
    <a asp-action="Index" class="btn btn-secondary">Вернуться на главную</a>
    <a asp-action="Divisions" class="btn btn-info">Просмотр по подразделениям</a>
    <a asp-action="Departments" class="btn btn-info">Просмотр по отделам</a>
    <a asp-action="Titles" class="btn btn-info">Просмотр по должностям</a>
</div>

@section Scripts {
    <script>
        // Debounce функция
        function debounce(func, wait) {
            let timeout;
            return function(...args) {
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(this, args), wait);
            };
        }

        const searchInput = document.getElementById('liveSearchInput');
        const tableContainer = document.querySelector('.table-responsive');
        const clearBtn = document.getElementById('clearSearchBtn');

        function toggleClearBtn() {
            if (searchInput && clearBtn) {
                clearBtn.style.display = searchInput.value.length > 0 ? '' : 'none';
            }
        }

        async function fetchContacts(query) {
            const url = `/Home/Search?query=${encodeURIComponent(query)}`;
            const response = await fetch(url, { headers: { 'X-Requested-With': 'XMLHttpRequest' } });
            if (response.ok) {
                const html = await response.text();
                // Парсим только таблицу из ответа
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = html;
                const newTable = tempDiv.querySelector('.table-responsive');
                if (newTable && tableContainer) {
                    tableContainer.innerHTML = newTable.innerHTML;
                }
            }
        }

        if (searchInput) {
            searchInput.addEventListener('input', debounce(function(e) {
                fetchContacts(e.target.value);
                toggleClearBtn();
            }, 350));
            searchInput.addEventListener('input', toggleClearBtn);
            window.addEventListener('DOMContentLoaded', toggleClearBtn);
        }
        if (clearBtn && searchInput) {
            clearBtn.addEventListener('click', function(e) {
                e.preventDefault();
                searchInput.value = '';
                fetchContacts('');
                toggleClearBtn();
                searchInput.focus();
            });
        }
    </script>
}
